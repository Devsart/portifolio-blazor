@page "/ai"

@inject HttpClient Http
@using GraphQL
@using GraphQL.Client.Http
@using GraphQL.Client.Serializer.Newtonsoft
@using Newtonsoft.Json;

<div class="w-100" style="background-color:#000">
    <h2 class="mt-5">Artificial Inteligence and Data Science</h2>

</div>
@if (principals == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="w-100 h-100 d-flex flex-wrap">
        @foreach (var principal in principals)
        {
            if (principal.Section == "ai")
            {
                <CardItem Title=@principal.Title Description=@principal.Description URI=@principal.URI ImageURI=@principal.ImageURI></CardItem>
            }
            else { }
        }
    </div>

}

@code {

    List<Items> principals;
    protected override async Task OnInitializedAsync()
    {
        var graphQLHttpClientOptions = new GraphQLHttpClientOptions
        {
            EndPoint = new Uri("http://localhost:4280/data-api/graphql")
        };

        var httpClient = new HttpClient();
        ;

        var graphQLClient = new GraphQLHttpClient(graphQLHttpClientOptions, new NewtonsoftJsonSerializer(), httpClient);

        var movieRequest = new GraphQLRequest
        {
            Query = @"
{
    publicacaos {
        items{
            id
            title
            section
            description
            uri
            imageURI
        }
    }
}
"
        };

        var graphQLResponse = await graphQLClient.SendQueryAsync<GraphQLPublicationResponse>(movieRequest);

        List<Items> items = graphQLResponse.Data.Publicacaos.Items;
        principals = items;
    }

    public class Publicacaos
    {
        public List<Items>
    Items
        { get; set; }
    };
    public class GraphQLPublicationResponse
    {

        public Publicacaos Publicacaos { get; set; }

    };

    public class Items
    {
        public string Title { get; set; }

        public string Section { get; set; }

        public string Description { get; set; }

        public string URI { get; set; }

        public string ImageURI { get; set; }
    };
}
